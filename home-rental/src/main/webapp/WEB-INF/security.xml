<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:sec="http://www.springframework.org/schema/security" 
       xmlns:beans="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.1.xsd">
 
    <sec:http auto-config="true" use-expressions="true" request-matcher="regex">
        <sec:form-login login-page="/login/" default-target-url="/"
                        always-use-default-target='true' />
        <!--authentication-failure-url="/loginfailed" />-->
        <sec:logout logout-success-url="/logout/" />
        
        <sec:intercept-url pattern="/account/**" access="isAuthenticated()" />
        <sec:intercept-url pattern="/property/create/" access="isAuthenticated()" />
        <sec:intercept-url pattern="/property/([0-9]+)/edit/" access="isAuthenticated()" />
        <sec:intercept-url pattern="/property/([0-9]+)/delete/" access="isAuthenticated()" />
        <sec:intercept-url pattern="/reservation/**" access="isAuthenticated()" />
        <sec:intercept-url pattern="/reservation/([0-9]+)/edit/" access="isAuthenticated()" />
        <sec:intercept-url pattern="/reservation/([0-9]+)/cancel/" access="isAuthenticated()" />
        <sec:intercept-url pattern="/reservation/([0-9]+)/note/" access="isAuthenticated()" />
        <sec:intercept-url pattern="/reservation/([0-9]+)/comment/" access="isAuthenticated()" />
        <sec:intercept-url pattern="/**" />
    </sec:http>
 
    <!-- authentication manager and password hashing -->
    <sec:authentication-manager alias="authenticationManager">
        <sec:authentication-provider ref="daoAuthenticationProvider"/>
    </sec:authentication-manager>
 
    <beans:bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <beans:property name="userDetailsService" ref="userDetailsService"/>
        <beans:property name="saltSource">
            <beans:bean class="org.springframework.security.authentication.dao.ReflectionSaltSource">
                <beans:property name="userPropertyToUse" value="email"/>
            </beans:bean>
        </beans:property>
        <beans:property name="passwordEncoder" ref="passwordEncoder"/>
    </beans:bean>
 
    <beans:bean id="userDetailsService"  name="userAuthenticationProvider" class="web.service.authentication.AuthenticationUserDetailsGetter">
        <beans:constructor-arg index="0" ref="userRepository"/>
    </beans:bean>
 
    <beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
        <beans:constructor-arg index="0" value="256"/>
    </beans:bean>
 
</beans:beans>